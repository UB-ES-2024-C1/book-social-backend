openapi: 3.0.0

tags:
  - name: Books
    description: Book management endpoints
  - name: Reviews
    description: Book review related endpoints
  - name: Statistics
    description: Book statistics and analytics

components:
  schemas:
    BookListDTO:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        genres:
          type: array
          items:
            type: string
        author:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
        shortSynopsis:
          type: string
          nullable: true
        reviewValue:
          type: number
          nullable: true
        image_url:
          type: string
          nullable: true

    BookDetailDTO:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        genres:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
          nullable: true
        author:
          type: object
          properties:
            id:
              type: integer
            firstName:
              type: string
            lastName:
              type: string
        synopsis:
          type: string
          nullable: true
        image_url:
          type: string
          nullable: true
        publication_date:
          type: string
          format: date
        publisher:
          type: string
          nullable: true
        ISBN:
          type: string
          nullable: true
        edition:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        num_pages:
          type: integer
          nullable: true
        externalRating:
          type: object
          properties:
            reviewValue:
              type: number
              nullable: true
            ratingCount:
              type: integer
              nullable: true
        reviewStats:
          type: object
          properties:
            averageRating:
              type: number
            totalReviews:
              type: integer
            ratingDistribution:
              type: object
              properties:
                '1':
                  type: integer
                '2':
                  type: integer
                '3':
                  type: integer
                '4':
                  type: integer
                '5':
                  type: integer
        reviews:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              rating:
                type: integer
              created_at:
                type: string
                format: date-time
              user:
                type: object
                properties:
                  id:
                    type: integer
                  firstName:
                    type: string
                  lastName:
                    type: string

    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /books/book-list/{limit}:
    parameters:
      - in: path
        name: limit
        required: false
        schema:
          type: integer
    get:
      tags: [Books]
      summary: Get a list of books
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of books retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListDTO'
        '500':
          $ref: '#/components/responses/InternalError'
  /books:
    post:
      tags: [Books]
      summary: Create a new book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - author
                - publication_date
                - genres
              properties:
                title:
                  type: string
                author:
                  type: integer
                  description: Author ID
                publication_date:
                  type: string
                  format: date
                genres:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
                synopsis:
                  type: string
                image_url:
                  type: string
                publisher:
                  type: string
                ISBN:
                  type: string
                edition:
                  type: string
                language:
                  type: string
                num_pages:
                  type: integer
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  book:
                    $ref: '#/components/schemas/BookDetailDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/book-detail/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the book

    get:
      tags: [Books]
      summary: Get detailed book information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Book details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailDTO'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags: [Books]
      summary: Update a book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDetailDTO'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags: [Books]
      summary: Delete a book
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/search:
    get:
      tags: [Books]
      summary: Search books
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: author
          schema:
            type: string
        - in: query
          name: genre
          schema:
            type: string
        - in: query
          name: publisher
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/{bookId}/reviews:
    parameters:
      - in: path
        name: bookId
        required: true
        schema:
          type: integer
    get:
      tags: [Reviews]
      summary: Get book reviews
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    rating:
                      type: integer
                    comment:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/{bookId}/rating-stats:
    get:
      tags: [Statistics]
      summary: Get book rating statistics
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rating statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      averageRating:
                        type: number
                      totalReviews:
                        type: integer
                      distribution:
                        type: object
                        properties:
                          '5':
                            type: integer
                          '4':
                            type: integer
                          '3':
                            type: integer
                          '2':
                            type: integer
                          '1':
                            type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/categories:
    get:
      tags: [Books]
      summary: Get all book categories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/genres:
    get:
      tags: [Books]
      summary: Get all book genres
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Genres retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres:
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/recent:
    get:
      tags: [Books]
      summary: Get recently added books
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: days
          schema:
            type: integer
            default: 30
          description: Number of days to look back
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of books to return
      responses:
        '200':
          description: Recent books retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookListDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/stats:
    get:
      tags: [Statistics]
      summary: Get book statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      byGenre:
                        type: array
                        items:
                          type: object
                          properties:
                            genre:
                              type: string
                            count:
                              type: integer
                      byYear:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                            count:
                              type: integer
                      ratingsByGenre:
                        type: array
                        items:
                          type: object
                          properties:
                            genre:
                              type: string
                            avgRating:
                              type: number
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/author/{authorId}:
    get:
      tags: [Books]
      summary: Get books by author
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: authorId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Books retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/top-rated:
    get:
      tags: [Books]
      summary: Get top rated books
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Top rated books retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookListDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
